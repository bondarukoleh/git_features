There are 3 major states in git
Working directory - where your unindex changes are
Index - where your changes added to index
Repository - commited changes to repository.

WORKING WITH FILES
#To update file in index avoid OS
$>git update-index --chmod=+x <file>

#Or if file isn't in index yet
$>git add --chmod=+x <file>

#to add file avoid .gitignore (force)
$>git add -f .idea/../someNeededFile

#to rename
$>git mv file1 file2

CLEAN
For deleting not tracked files and directories. If you have some generated stuff or downloaded
- it will help you.
$>git clean -dxf (d - for directories) (x - for files even in gitignore) (f - to make it work)

So for cleanup whole project we need to reset hard on HEAD, and make clean -dxf

Git vs SVN
Git is a distributed VCS; SVN is a Centralized Version Control System (CVCS) VCS.
Git has a centralized server and repository; SVN does not have a centralized server or repository.
The content in Git is stored as metadata; SVN stores files of content.
Git branches are easier to work with than SVN branches.
Git does not have the global revision number feature like SVN has.
Git has better content protection than SVN.
Git was developed for Linux kernel by Linus Torvalds; SVN was developed by CollabNet, Inc.
Git is distributed under GNU, and its maintenance overseen by Junio Hamano; Apache Subversion, or SVN,
 is distributed under the open source license.

So in SVN when you checkout (alike pull) centrall repository copy - you can make changes in it, commit, but you
don't own this repo fully, your changes - is nothing in global context, you cannot just push them anywhere, it's
like a shadow copy pf central repository - only place where you can store this code - is central repo.
In git you clone (that's why this is clone) the repo, and this is fully alive repository, you can push it and does
whatever you're like with it.